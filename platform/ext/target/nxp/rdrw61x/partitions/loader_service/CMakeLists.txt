#-------------------------------------------------------------------------------
# Copyright (c) 2021-2023, Arm Limited. All rights reserved.
# Copyright 2024 NXP
#
# SPDX-License-Identifier: BSD-3-Clause
#
#-------------------------------------------------------------------------------
if (NOT TFM_PARTITION_LOADER_SERVICE)
    return()
endif()

cmake_minimum_required(VERSION 3.15)
cmake_policy(SET CMP0079 NEW)


message("Adding tf-m loader service partition")

# Set the paths variables to be used later on in cmake
set(NXP_HAL_FILE_PATH ${TFM_PLATFORM_NXP_HAL_FILE_PATH})
set(INSTALL_INTERFACE_INC_DIR    ${TFM_INSTALL_PATH}/interface/include)
set(INSTALL_INTERFACE_SRC_DIR    ${TFM_INSTALL_PATH}/interface/src)
set(NXP_CONN_FW_PATH             ${NXP_HAL_FILE_PATH}/components/conn_fwloader)

# The name of the target is required to be of the pattern
# tfm_app_rot_partition_x or tfm_psa_rot_partition_x, as it affects how the
# linker script will lay the partition in memory.
add_library(tfm_psa_rot_partition_lds STATIC)

target_sources(tfm_psa_rot_partition_lds
    PRIVATE
        tfm_lds_req_mngr.c
        ${NXP_CONN_FW_PATH}/fsl_loader.c
        ${NXP_CONN_FW_PATH}/fsl_loader_utils.c
        ${NXP_CONN_FW_PATH}/nboot_hal.c
        ${NXP_CONN_FW_PATH}/life_cycle.c
)

# Add the source files generated by parse tools when building.
# The intermedia file defines the partition stack.
target_sources(tfm_psa_rot_partition_lds
    PRIVATE
        ${CMAKE_BINARY_DIR}/generated/secure_fw/partitions/loader_service/auto_generated/intermedia_tfm_loader_service.c
)
# The load info file includes the static data of the partition.
target_sources(tfm_partitions
    INTERFACE
        ${CMAKE_BINARY_DIR}/generated/secure_fw/partitions/loader_service/auto_generated/load_info_tfm_loader_service.c
)

#add_subdirectory(${NXP_CONN_FW_PATH}/conn_fwloader)

target_include_directories(tfm_psa_rot_partition_lds
    PUBLIC
        ${NXP_CONN_FW_PATH}/include
)

target_include_directories(tfm_psa_rot_partition_lds
    PRIVATE
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
        ${CMAKE_SOURCE_DIR}/generated/secure_fw/partitions/loader_service
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
)

target_include_directories(tfm_partitions
    INTERFACE
        ${CMAKE_CURRENT_SOURCE_DIR}
)

target_link_libraries(tfm_psa_rot_partition_lds
    PRIVATE
        platform_s
        tfm_config
        tfm_sprt
)

############################ Secure API ########################################
set(INTERFACE_SRC_DIR            ${CMAKE_CURRENT_SOURCE_DIR}/interface/src)
set(INTERFACE_INC_DIR            ${CMAKE_CURRENT_SOURCE_DIR}/interface/include)
target_sources(tfm_sprt
    INTERFACE
        ${INTERFACE_SRC_DIR}/tfm_lds_api.c
)

target_include_directories(tfm_sprt
    PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${INTERFACE_INC_DIR}
        ${NXP_CONN_FW_PATH}/include
        ${NXP_HAL_FILE_PATH}/components/osa
)

############################ Non-secure API ####################################

add_library(tfm_psa_rot_partition_lds_ns INTERFACE)

target_sources(tfm_psa_rot_partition_lds_ns
    INTERFACE
        ${INTERFACE_SRC_DIR}/tfm_lds_api.c
)

target_include_directories(tfm_psa_rot_partition_lds_ns
    INTERFACE
        ${INTERFACE_INC_DIR}
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${NXP_HAL_FILE_PATH}/drivers/common
        ${NXP_CONN_FW_PATH}/include
)
############################ Partition Defs ####################################

target_link_libraries(tfm_partitions
    INTERFACE
        tfm_psa_rot_partition_lds
)

target_compile_definitions(tfm_config
    INTERFACE
        -DTFM_PARTITION_LOADER_SERVICE
        TFM_PARTITION_LOADER_SERVICE
)

install(FILES       ${INTERFACE_SRC_DIR}/tfm_lds_api.c
        DESTINATION ${INSTALL_INTERFACE_SRC_DIR})


install(FILES       ${CMAKE_CURRENT_SOURCE_DIR}/tfm_lds_config.h
                    ${CMAKE_CURRENT_SOURCE_DIR}/tfm_lds_func_ids.h
        DESTINATION ${INSTALL_INTERFACE_INC_DIR})
        
install(FILES       ${INTERFACE_INC_DIR}/tfm_lds_defs.h
        DESTINATION ${INSTALL_INTERFACE_INC_DIR})
